// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  HeartrateJS.Router = (function(_super) {

    __extends(Router, _super);

    function Router() {
      return Router.__super__.constructor.apply(this, arguments);
    }

    Router.prototype.routes = {
      '': 'index',
      'measure': 'measure',
      'calculate': 'calculate',
      'result': 'result'
    };

    Router.prototype.measurement = null;

    Router.prototype.index = function() {
      return new HeartrateJS.Views.Instructions().render();
    };

    Router.prototype.measure = function() {
      var measuring,
        _this = this;
      this.measurement = new HeartrateJS.Collections.Measurement();
      measuring = new HeartrateJS.Views.Measuring({
        collection: this.measurement
      }).render();
      return measuring.on('complete', function() {
        return window.location.hash = 'calculate';
      });
    };

    Router.prototype.calculate = function() {
      if (this.measurement != null) {
        this.measurement.calculate();
        this.measurement.on('calculated', function() {
          return window.location.hash = 'result';
        });
        return new HeartrateJS.Views.Calculating().render();
      } else {
        return window.location.hash = '';
      }
    };

    Router.prototype.result = function() {
      if (this.measurement != null) {
        return new HeartrateJS.Views.Result({
          collection: this.measurement
        }).render();
      } else {
        return window.location.hash = '';
      }
    };

    return Router;

  })(Backbone.Router);

}).call(this);
